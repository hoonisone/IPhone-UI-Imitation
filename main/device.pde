class Device {

    float ratioX;  // 디바이스 가로 비율
    float ratioY;  // 디바이스 세로 비율
  
    float MAXIMUM_SIZE;  // 최대 사이즈
    float MINIMUM_SIZE;  // 최소 사이즈
    float CHANGE_RATE;  // 사이즈 변화 속도
  
    public IPhone iphone;
    
    public boolean isTurnOn = true;
  
    private color fillColor;  // 디바이스 색깔
    private color strokeColor; // 디바이스 테두리 색깔
  
    public float w;  // 디바이스 가로길이
    public float h;  // 디바이스 세로길이
  
    public float x;  // 디바이스 X좌표
    public float y;  // 디바이스 Y좌표
  
    public Device(IPhone iphone) {  // 핸드폰 생성자
  
        this.iphone = iphone;
    
        ratioX = 26;
        ratioY = 52;
        MAXIMUM_SIZE = 500;
        MINIMUM_SIZE = 100;
        CHANGE_RATE  = 10;
        w  = 300;
        h = w/ratioX*ratioY;
    
        x = width/2-w/2;  // 중심에 위치
        y = height/2-h/2; // 중심에 위치
    
        fillColor = PALETTE.WHITE;// 디바이스 색깔 설정
        strokeColor = PALETTE.PINK; // 디바이스 커버(테두리) 색깔 설정
    }
  
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////      set_menu     ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public void set_fillColor(color c){this.fillColor = c;}
    public void set_strokeColor(color c){strokeColor = c;}
    void set_x                (float x){this.x = x;}
    void set_y                (float y){this.y = y;}
    void set_w                (float w){this.w = w;}
    void set_h                (float h){this.h = h;} 
    
    void set_isTurnOn         (boolean isTurnOn){
        if(isTurnOn == false)
            iphone.display.set_situation("turnOffScreen");
        this.isTurnOn = isTurnOn;
    }
    
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////      get_menu     ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    color get_fillColor()      {return fillColor;}
    color get_strokeColor()    {return strokeColor;}
    float get_x()              {return x;}
    float get_y()              {return y;}
    float get_w()              {return w;}
    float get_h()              {return h;}
    
    
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////       sketch      ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public void sketch(){
        PALETTE.setting_pen(true, true, fillColor, strokeColor, w/70);  // 몸체 그리기
        rect( x, y, w, h, w/6);
    
        PALETTE.setting_pen(true, true, PALETTE.BLACK, PALETTE.BLACK, h/200);
        ellipse( x+w/7*2, y+h/100*6, w/100*3, w/100*3);
        ellipse( x+w/2, y+h/100*3, w/90*1, w/90*1);
    
        PALETTE.setting_pen(true, true, PALETTE.BLACK, PALETTE.BLACK, h/250*2);
        line(x+w/20*8, y+h/100*6, x+w/20*12, y+h/100*6);
    }
  
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////      fuction      ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    public void sizeChange(float e)
    {
        if (e < 0)  // 위로 스크롤
            sizeUp();
        else
            sizeDown();
    }
  
    public void sizeUp(){  // 디바이스 크기 키우기
    
        if (w <= MAXIMUM_SIZE-CHANGE_RATE)
        {
            w += CHANGE_RATE;
            x -= CHANGE_RATE/2;
            y -= CHANGE_RATE/ratioX*ratioY/2; 
        }
    }
  
    public void sizeDown() {  // 디바이스 크기 줄이기
        if (w >= MINIMUM_SIZE+CHANGE_RATE) {
            w -= CHANGE_RATE;
            x += CHANGE_RATE/2;
            y += CHANGE_RATE/ratioX*ratioY/2;
        }
    }
  
    public void adjust(){  // 범위 보정
        if (w>MAXIMUM_SIZE)
            w = MAXIMUM_SIZE;
        else if (w<MINIMUM_SIZE)
            w = MINIMUM_SIZE;
    
        if (x<0)    // x좌표 보정
            x = 0;
        else if (x+w>width)
            x = width-w;
    
        if (y<0)    // y좌표 보정
            y = 0;
        else if (y+h>height)
            y = height-y;
    
        h = w/ratioX*ratioY;  // y값 보정
    }
  
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////       judge       ///////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////  
    public boolean isMouseOn() {
        if (x <= mouseX && mouseX <= x+w )
            if (y <= mouseY && mouseY <= y+h )
                return true;
    
        return false;
    }
}
